<Activity mc:Ignorable="sads sap sap2010" x:Class="SolutionManagerEmptyTemplate" this:SolutionManagerEmptyTemplate.FaultBag="DatolitePowertoys"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:ea="clr-namespace:EDG.Activities;assembly=EDG.Activities"
 xmlns:eaa="clr-namespace:EDG.Activities.AssignVariables;assembly=EDG.Activities.AssignVariables"
 xmlns:eaa1="clr-namespace:EDG.Activities.ApplyStylesheet;assembly=EDG.Activities.ApplyStylesheet"
 xmlns:eab="clr-namespace:EDG.Activities.BreakDocument;assembly=EDG.Activities.BreakDocument"
 xmlns:eac="clr-namespace:EDG.Activities.ConvertExcelDocument;assembly=EDG.Activities.ConvertExcelDocument"
 xmlns:eac1="clr-namespace:EDG.Activities.ConvertDocumentBase;assembly=EDG.Activities.ConvertDocumentBase"
 xmlns:eae="clr-namespace:EDG.Activities.ExecuteSql;assembly=EDG.Activities.ExecuteSql"
 xmlns:eae1="clr-namespace:EDG.Activities.EvaluateXpath;assembly=EDG.Activities.EvaluateXpath"
 xmlns:eae2="clr-namespace:EDG.Activities.Email;assembly=EDG.Activities.Email"
 xmlns:eafp="clr-namespace:Elite.Activities.Framework.PropertyBag;assembly=Elite.Activities.Framework"
 xmlns:eag="clr-namespace:EDG.Activities.GetPropertyBagUrl;assembly=EDG.Activities.GetPropertyBagUrl"
 xmlns:eal="clr-namespace:EDG.Activities.Log;assembly=EDG.Activities.Log"
 xmlns:eas="clr-namespace:EDG.Activities.SaveToDisk;assembly=EDG.Activities.SaveToDisk"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sco1="clr-namespace:System.Collections.ObjectModel;assembly=System"
 xmlns:sder="clr-namespace:System.Diagnostics.Eventing.Reader;assembly=System.Core"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:snh="clr-namespace:System.Net.Http;assembly=System.Net.Http"
 xmlns:snhh="clr-namespace:System.Net.Http.Headers;assembly=System.Net.Http"
 xmlns:stt="clr-namespace:System.Threading.Tasks;assembly=mscorlib"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ELITEWorkflowDirectory" Type="InOutArgument(x:String)" />
    <x:Property Name="ELITEWorkflowCode" Type="InArgument(x:String)" />
    <x:Property Name="RuntimeEngineURL" Type="InArgument(x:String)" />
    <x:Property Name="SourceDocument" Type="InArgument(ea:Document)" />
    <x:Property Name="OutputDocuments" Type="OutArgument(scg:List(ea:Document))" />
    <x:Property Name="Errors" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="FaultBag" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:WorkflowViewState.IdRef>SolutionManagerEmptyTemplate_1</sap2010:WorkflowViewState.IdRef>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.ServiceModel</x:String>
      <x:String>System.ServiceModel.Activities</x:String>
      <x:String>System.ServiceModel.Channels</x:String>
      <x:String>System.ServiceModel.Description</x:String>
      <x:String>System.ServiceModel.Security</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities.Debugger.Symbol</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.Json</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>EDG.Activities</x:String>
      <x:String>System.Diagnostics.Eventing.Reader</x:String>
      <x:String>EDG.Activities.ExecuteSql</x:String>
      <x:String>EDG.Activities.BreakDocument</x:String>
      <x:String>EDG.Activities.AssignVariables</x:String>
      <x:String>System.IO</x:String>
      <x:String>EDG.Activities.ApplyStylesheet</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Security</x:String>
      <x:String>EDG.Activities.ConvertDocumentBase</x:String>
      <x:String>EDG.Activities.GetPropertyBagUrl</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net.Http</x:String>
      <x:String>System.Net.Http.Headers</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Converters</x:String>
      <x:String>Newtonsoft.Json.Serialization</x:String>
      <x:String>EDG.Activities.SaveToDisk</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Web</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>EDG.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>EDG.Activities.ExecuteSql</AssemblyReference>
      <AssemblyReference>EDG.Activities.BreakDocument</AssemblyReference>
      <AssemblyReference>EDG.Activities.AssignVariables</AssemblyReference>
      <AssemblyReference>EDG.Activities.ApplyStylesheet</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>EDG.Activities.ConvertDocumentBase</AssemblyReference>
      <AssemblyReference>EDG.Activities.GetPropertyBagUrl</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Net.Http</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Extensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>EDG.Activities.SaveToDisk</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Root Sequence (OnPrem)" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence DisplayName="Main Sequence" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="evtQueryString" />
        <Variable x:TypeArguments="sder:EventLogQuery" Name="evtQuery" />
        <Variable x:TypeArguments="sder:EventLogReader" Name="logReader" />
        <Variable x:TypeArguments="sder:EventRecord" Name="eventInstance" />
        <Variable x:TypeArguments="eae:ExecuteSqlResult" Name="faultList" />
        <Variable x:TypeArguments="eab:BreakDocumentResult" Name="brkResult" />
        <Variable x:TypeArguments="x:String" Name="xmlLog" />
        <Variable x:TypeArguments="eaa1:ApplyStylesheetResult" Name="applyResult" />
        <Variable x:TypeArguments="ea:Document" Name="newSrc" />
        <Variable x:TypeArguments="s:Byte[]" Name="ba" />
        <Variable x:TypeArguments="si:MemoryStream" Name="ms" />
        <Variable x:TypeArguments="sx:XmlDataDocument" Name="xml" />
        <Variable x:TypeArguments="eaa:AssignVariablesResult" Name="faultVars" />
        <Variable x:TypeArguments="x:String" Name="faultID" />
        <Variable x:TypeArguments="eaa:AssignVariablesResult" Name="countVars" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="fBag" />
        <Variable x:TypeArguments="eag:GetPropertyBagUrlResult" Name="pBagURL" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="PropertyBag" />
      </Sequence.Variables>
      <Sequence DisplayName="Property Bag Sequence" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <eag:GetPropertyBagUrl sap2010:WorkflowViewState.IdRef="GetPropertyBagUrl_1" Result="[pBagURL]" RootFolderPath="[ELITEWorkflowDirectory]" />
        <eafp:GetBagFromStore Attributes="{x:Null}" AutoDeObfuscate="{x:Null}" CorrelationId="{x:Null}" DisplayName="GetFaultBag" sap2010:WorkflowViewState.IdRef="GetBagFromStore_1" Name="[FaultBag]" Result="[fBag]" ServiceUri="[pBagURL.url]" />
        <eafp:GetBagFromStore Attributes="{x:Null}" AutoDeObfuscate="{x:Null}" CorrelationId="{x:Null}" DisplayName="Get 3E Bag" sap2010:WorkflowViewState.IdRef="GetBagFromStore_2" Name="TE_PM_3E_Settings" Result="[PropertyBag]" ServiceUri="[pBagURL.url]" />
      </Sequence>
      <Sequence DisplayName="FaultReport" sap2010:WorkflowViewState.IdRef="Sequence_16">
        <Sequence.Variables>
          <Variable x:TypeArguments="eac1:ConvertDocumentResult" Name="theExcelDoc" />
          <Variable x:TypeArguments="eaa1:ApplyStylesheetResult" Name="rnsSource" />
          <Variable x:TypeArguments="eas:SaveToDiskResult" Name="saveResult" />
        </Sequence.Variables>
        <eae:ExecuteSql ConnectionString="[PropertyBag(&quot;ProcessManager_ConnectionString&quot;)]" DisplayName="Get New List of Faulted Instances" sap2010:WorkflowViewState.IdRef="ExecuteSql_1" Query="select WorkflowInstanceID, WorkflowHostType, StartTime from WFInstances wfi left join DLS_FaultCheck dfc on wfi.WorkflowInstanceID = dfc.InstanceID where wfi.LastStatus = 3 and dfc.InstanceID is null" Result="[faultList]" />
        <If Condition="[fBag(&quot;DebugMode&quot;) = &quot;true&quot;]" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Then>
            <eas:SaveToDisk Document="[faultlist.Document]" sap2010:WorkflowViewState.IdRef="SaveToDisk_1" Overwrite="True" SavePath="c:\temp\faultSQL.xml" SkipFirst="True">
              <eas:SaveToDisk.VersionMask>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </eas:SaveToDisk.VersionMask>
            </eas:SaveToDisk>
          </If.Then>
        </If>
        <eaa:AssignVariables DisplayName="GetCount" Document="[faultList.Document]" sap2010:WorkflowViewState.IdRef="AssignVariables_3" Result="[countVars]">
          <eaa:AssignVariables.Variables>
            <scg:List x:TypeArguments="eaa:Variable" Capacity="4">
              <eaa:XpathVariable DefaultXmlNamespace="{x:Null}" DefaultValue="0" Expression="count(/DocumentElement/Results)" Name="faultCount" ReturnType="Document">
                <eaa:XpathVariable.XmlNamespaces>
                  <sco1:ObservableCollection x:TypeArguments="eae1:XmlNamespace" />
                </eaa:XpathVariable.XmlNamespaces>
              </eaa:XpathVariable>
            </scg:List>
          </eaa:AssignVariables.Variables>
        </eaa:AssignVariables>
        <If Condition="[Int32.Parse(countVars(&quot;faultCount&quot;).ToString) &gt; 0]" DisplayName="Check for faults" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Then>
            <Sequence DisplayName="Count &gt; 0" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <eab:BreakDocument BreakOffsetX="0" BreakOffsetY="0" BreakType="XML" CharacterLength="0" Document="[faultList.Document]" Expression="/DocumentElement/Results" sap2010:WorkflowViewState.IdRef="BreakDocument_1" Result="[brkResult]" SkipFirst="True" TextOption="BreakOption" TrapOffsetX="0" TrapOffsetY="0" />
              <Sequence DisplayName="Build XML" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[xmlLog]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">&lt;DLSFaultLog&gt;</InArgument>
                  </Assign.Value>
                </Assign>
                <ForEach x:TypeArguments="ea:Document" DisplayName="ForEach&lt;Document&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[brkResult.Documents]">
                  <ActivityAction x:TypeArguments="ea:Document">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ea:Document" Name="fault" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[xmlLog]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[xmlLog &amp; "&lt;theEvents&gt;"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <eaa:AssignVariables DisplayName="Get Fault ID" Document="[fault]" sap2010:WorkflowViewState.IdRef="AssignVariables_2" Result="[faultVars]">
                        <eaa:AssignVariables.Variables>
                          <scg:List x:TypeArguments="eaa:Variable" Capacity="4">
                            <eaa:XpathVariable DefaultValue="{x:Null}" DefaultXmlNamespace="{x:Null}" Expression="/Results/WorkflowInstanceID" Name="instanceID" ReturnType="Document">
                              <eaa:XpathVariable.XmlNamespaces>
                                <sco1:ObservableCollection x:TypeArguments="eae1:XmlNamespace" />
                              </eaa:XpathVariable.XmlNamespaces>
                            </eaa:XpathVariable>
                            <eaa:XpathVariable DefaultValue="{x:Null}" DefaultXmlNamespace="{x:Null}" Expression="/Results/WorkflowHostType" Name="templateName" ReturnType="Document">
                              <eaa:XpathVariable.XmlNamespaces>
                                <sco1:ObservableCollection x:TypeArguments="eae1:XmlNamespace" />
                              </eaa:XpathVariable.XmlNamespaces>
                            </eaa:XpathVariable>
                            <eaa:XpathVariable DefaultValue="{x:Null}" DefaultXmlNamespace="{x:Null}" Expression="/Results/StartTime" Name="timestamp" ReturnType="Document">
                              <eaa:XpathVariable.XmlNamespaces>
                                <sco1:ObservableCollection x:TypeArguments="eae1:XmlNamespace" />
                              </eaa:XpathVariable.XmlNamespaces>
                            </eaa:XpathVariable>
                          </scg:List>
                        </eaa:AssignVariables.Variables>
                      </eaa:AssignVariables>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[faultID]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[faultvars("instanceID").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[Not(String.IsNullOrEmpty(faultID))]" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Then>
                          <Sequence DisplayName="Collect &amp; Email Events" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[evtQueryString]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["&lt;QueryList&gt;&lt;Query Id=""0"" Path=""ThomsonReuters-ProcessManager-ProcessesActivities/Admin""&gt;&lt;Select Path=""ThomsonReuters-ProcessManager-ProcessesActivities/Admin""&gt;*[EventData[Data[@Name='InstanceID'] and (Data='" &amp; faultID &amp; "')]]&lt;/Select&gt;&lt;Select Path=""ThomsonReuters-ProcessManager-ProcessesActivities/Operational""&gt;*[EventData[Data[@Name='InstanceID'] and (Data='" &amp; faultID &amp; "')]]&lt;/Select&gt;&lt;Select Path=""ThomsonReuters-ProcessManager-ExecutionEngine/Admin""&gt;*[EventData[Data[@Name='InstanceID'] and (Data='" &amp; faultID &amp; "')]]&lt;/Select&gt;&lt;Select Path=""ThomsonReuters-ProcessManager-ExecutionEngine/Operational""&gt;*[EventData[Data[@Name='InstanceID'] and (Data='" &amp; faultID &amp; "')]]&lt;/Select&gt;&lt;Select Path=""ThomsonReuters-ProcessManager-Services/Admin""&gt;*[EventData[Data[@Name='InstanceID'] and (Data='" &amp; faultID &amp; "')]]&lt;/Select&gt;&lt;Select Path=""ThomsonReuters-ProcessManager-Services/Operational""&gt;*[EventData[Data[@Name='InstanceID'] and (Data='" &amp; faultID &amp; "')]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sder:EventLogQuery">[evtQuery]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sder:EventLogQuery">[New EventLogQuery("Application", PathType.LogName, evtQueryString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sder:EventLogReader">[logReader]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sder:EventLogReader">[New EventLogReader(evtQuery)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sder:EventRecord">[eventInstance]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sder:EventRecord">[logReader.ReadEvent()]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[xmlLog]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[xmlLog + "&lt;Events&gt;"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[xmlLog]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[xmlLog + "&lt;Attributes&gt;&lt;InstanceID&gt;" &amp; faultID &amp; "&lt;/InstanceID&gt;&lt;TemplateName&gt;" &amp; faultVars("templateName").tostring &amp; " &lt;/TemplateName&gt;&lt;Timestamp&gt;" &amp; faultVars("templateName").tostring &amp; "&lt;/Timestamp&gt;&lt;FilterQuery&gt;" &amp; EvtQueryString &amp;"&lt;/FilterQuery&gt;&lt;/Attributes&gt;"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <While DisplayName="Build Log List" sap2010:WorkflowViewState.IdRef="While_2" Condition="[Not(eventInstance Is Nothing)]">
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[xmlLog]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[xmlLog + "&lt;LogEntry&gt;" &amp; eventInstance.ToXml &amp; "&lt;/LogEntry&gt;"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="sder:EventRecord">[eventInstance]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="sder:EventRecord">[logReader.ReadEvent()]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </While>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[xmlLog]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[xmlLog + "&lt;/Events&gt;"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <eal:Log sap2010:WorkflowViewState.IdRef="Log_5" LogType="Critical" Message="NO FAULTS FOUND" />
                        </If.Else>
                      </If>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[xmlLog]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[xmlLog &amp; "&lt;/theEvents&gt;"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ForEach>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[xmlLog]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[xmlLog &amp; "&lt;/DLSFaultLog&gt;"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Sequence DisplayName="Set XML" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Byte[]">[ba]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Byte[]">[system.Text.Encoding.ASCII.GetBytes(xmlLog)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                    <Assign.To>
                      <OutArgument x:TypeArguments="si:MemoryStream">[ms]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="si:MemoryStream">[new System.IO.MemoryStream(ba)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ea:Document">[newSrc]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ea:Document">[edg.Activities.Document.Create(ms)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[fBag(&quot;DebugMode&quot;) = &quot;true&quot;]" sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Then>
                      <eas:SaveToDisk Document="[newSrc]" sap2010:WorkflowViewState.IdRef="SaveToDisk_5" Overwrite="True" SavePath="c:\temp\event_source.xml" SkipFirst="True">
                        <eas:SaveToDisk.VersionMask>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </eas:SaveToDisk.VersionMask>
                      </eas:SaveToDisk>
                    </If.Then>
                  </If>
                </Sequence>
              </Sequence>
              <Sequence DisplayName="Document Assembly" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <eaa1:ApplyStylesheet TemplateName="{x:Null}" DisplayName="RNS" Document="[newSrc]" sap2010:WorkflowViewState.IdRef="ApplyStylesheet_5" Result="[rnsSource]" StylesheetPath="[System.IO.Path.Combine(ELITEWorkflowDirectory, ELITEWorkflowCode &amp; &quot;_XAML&quot;, &quot;_RNS.xsl&quot;)]">
                  <eaa1:ApplyStylesheet.Parameters>
                    <sco1:ObservableCollection x:TypeArguments="eaa1:StyleSheetParameter" />
                  </eaa1:ApplyStylesheet.Parameters>
                </eaa1:ApplyStylesheet>
                <eaa1:ApplyStylesheet TemplateName="{x:Null}" DisplayName="Build Excel Report" Document="[rnsSource.Document]" sap2010:WorkflowViewState.IdRef="ApplyStylesheet_6" Result="[applyResult]" StylesheetPath="[System.IO.Path.Combine(ELITEWorkflowDirectory, ELITEWorkflowCode &amp; &quot;_XAML&quot;, &quot;DPT_EventFaultReport.dmast&quot;)]">
                  <eaa1:ApplyStylesheet.Parameters>
                    <sco1:ObservableCollection x:TypeArguments="eaa1:StyleSheetParameter" />
                  </eaa1:ApplyStylesheet.Parameters>
                </eaa1:ApplyStylesheet>
                <eac:ConvertExcelDocument Contact="{x:Null}" DocumentPassword="{x:Null}" ImagePath="{x:Null}" Location="{x:Null}" OwnerPassword="{x:Null}" PfxFile="{x:Null}" PfxPassword="{x:Null}" Reason="{x:Null}" UserPassword="{x:Null}" Algorithm="AESx256" ApplyPDFBookmarks="True" ArePermissionsSet="False" AssembleDocument="True" DisplayName="CreateXLSX" Document="[applyResult.Document]" EditingRestrictions="0" ExtractContent="True" ExtractContentWithDisabilities="True" FillForm="True" sap2010:WorkflowViewState.IdRef="ConvertExcelDocument_1" IncludeBOM="False" IsCertificateSet="False" IsEncryptionSet="False" IsRestrictionsSet="False" IsSignatureVisible="False" ModifyContent="True" ModifyTextAnnotations="True" OfficeVersion="Office2019" PageNumber="0" PositionHeight="0" PositionWidth="0" PositionX="0" PositionY="0" PrintDocument="True" PrintingQuality="True" Result="[theExcelDoc]" SelectedOutputType="XLSX" TrackChanges="False" UseSelectedOutputFormat="True">
                  <eac:ConvertExcelDocument.ExpressionOutputFormat>
                    <InArgument x:TypeArguments="ea:DocumentTypes" />
                  </eac:ConvertExcelDocument.ExpressionOutputFormat>
                </eac:ConvertExcelDocument>
                <If Condition="[fBag(&quot;SaveFaultReportFilePath&quot;) = &quot;&quot;]" DisplayName="Determine save path" sap2010:WorkflowViewState.IdRef="If_6">
                  <If.Then>
                    <eas:SaveToDisk Document="[theExcelDoc.Document]" sap2010:WorkflowViewState.IdRef="SaveToDisk_8" Overwrite="True" Result="[saveResult]" SavePath="[&quot;C:\Temp\faultReportDefault_&quot; &amp; DateTime.Now.ToString(&quot;yyyy-MM-dd- HH-mm-ss&quot;) &amp; &quot;.xlsx&quot;]" SkipFirst="True">
                      <eas:SaveToDisk.VersionMask>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </eas:SaveToDisk.VersionMask>
                    </eas:SaveToDisk>
                  </If.Then>
                  <If.Else>
                    <eas:SaveToDisk Document="[theExcelDoc.Document]" sap2010:WorkflowViewState.IdRef="SaveToDisk_10" Overwrite="True" Result="[saveResult]" SavePath="[System.IO.Path.Combine(fBag(&quot;SaveFaultReportFilePath&quot;),&quot;faultReportStandard_&quot; &amp; DateTime.Now.ToString(&quot;yyyy-MM-dd-HH-mm-ss&quot;)&amp; &quot;.xlsx&quot;)]" SkipFirst="True">
                      <eas:SaveToDisk.VersionMask>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </eas:SaveToDisk.VersionMask>
                    </eas:SaveToDisk>
                  </If.Else>
                </If>
              </Sequence>
              <If Condition="[fBag(&quot;EnableFaultEmail&quot;) = &quot;true&quot;]" DisplayName="Check if email is enabled" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Then>
                  <TryCatch DisplayName="TryEmail" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <eae2:Email EnableSSL="False" ExchangeAuthenticationMode="Integrated" From="faultreport@datolitesolutions.com" sap2010:WorkflowViewState.IdRef="Email_1" IsHTML="True" MSExchangeVersion="Exchange2010_SP2" Port="[Int32.Parse(PropertyBag(&quot;SMTP_Port&quot;))]" Priority="Normal" Protocol="Smtp" SMTPAuthenticationMode="Anonymous" Sender="faultreport@datolitesolutions.com" ServerAddress="[PropertyBag(&quot;SMTP_Host&quot;)]" Subject="3ET Fault Detected">
                        <eae2:Email.BCC>
                          <sco1:ObservableCollection x:TypeArguments="InArgument(x:String)" />
                        </eae2:Email.BCC>
                        <eae2:Email.Body>
                          <InArgument x:TypeArguments="x:String" />
                        </eae2:Email.Body>
                        <eae2:Email.CC>
                          <sco1:ObservableCollection x:TypeArguments="InArgument(x:String)" />
                        </eae2:Email.CC>
                        <eae2:Email.EmailAttachments>
                          <eae2:Attachment AttachmentContent="[theExcelDoc.Document]" Filename="[&quot;3ETFaultReport_&quot; &amp; DateTime.Now.ToString(&quot;yyyy-MM-dd HH:mm:ss&quot;) &amp; &quot;.xlsx&quot;]" />
                        </eae2:Email.EmailAttachments>
                        <eae2:Email.Password>
                          <InArgument x:TypeArguments="x:String" />
                        </eae2:Email.Password>
                        <eae2:Email.To>
                          <InArgument x:TypeArguments="x:String">[fBag("SendFaultReportTo")]</InArgument>
                        </eae2:Email.To>
                        <eae2:Email.Username>
                          <InArgument x:TypeArguments="x:String" />
                        </eae2:Email.Username>
                      </eae2:Email>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <eal:Log sap2010:WorkflowViewState.IdRef="Log_7" LogType="Error" Message="[&quot;Cannot send email: &quot; &amp; exception.Message]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </If.Then>
              </If>
              <If Condition="[fBag(&quot;EnableTeamsIntegration&quot;) = &quot;true&quot;]" DisplayName="Check if Teams Integration is Enabled" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Then>
                  <Sequence DisplayName="Teams Integration" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="payload" />
                      <Variable x:TypeArguments="snh:HttpClient" Name="client" />
                      <Variable x:TypeArguments="snhh:MediaTypeWithQualityHeaderValue" Default="[new MediaTypeWithQualityHeaderValue(&quot;application/json&quot;)]" Name="media" />
                      <Variable x:TypeArguments="stt:Task(snh:HttpResponseMessage)" Name="response" />
                      <Variable x:TypeArguments="x:String" Name="url" />
                      <Variable x:TypeArguments="snh:HttpContent" Name="content" />
                      <Variable x:TypeArguments="eaa1:ApplyStylesheetResult" Name="teamsDataDoc" />
                      <Variable x:TypeArguments="eaa:AssignVariablesResult" Name="teamsVars" />
                      <Variable x:TypeArguments="x:String" Name="header" />
                      <Variable x:TypeArguments="x:String" Name="templateList" />
                      <Variable x:TypeArguments="x:String" Name="footer" />
                      <Variable x:TypeArguments="x:String" Name="faultList" />
                      <Variable x:TypeArguments="x:String" Name="saveloc" />
                    </Sequence.Variables>
                    <Sequence DisplayName="Acquire Data For Teams Msg" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <eaa1:ApplyStylesheet TemplateName="{x:Null}" DisplayName="Do GetTeamsData" Document="[rnsSource.Document]" sap2010:WorkflowViewState.IdRef="ApplyStylesheet_7" Result="[teamsDataDoc]" StylesheetPath="[System.IO.Path.Combine(ELITEWorkflowDirectory, ELITEWorkflowCode &amp; &quot;_XAML&quot;, &quot;_GetTeamsData.xsl&quot;)]">
                        <eaa1:ApplyStylesheet.Parameters>
                          <sco1:ObservableCollection x:TypeArguments="eaa1:StyleSheetParameter" />
                        </eaa1:ApplyStylesheet.Parameters>
                      </eaa1:ApplyStylesheet>
                      <If Condition="[fBag(&quot;DebugMode&quot;) = &quot;true&quot;]" sap2010:WorkflowViewState.IdRef="If_10">
                        <If.Then>
                          <eas:SaveToDisk Document="[teamsDataDoc.Document]" sap2010:WorkflowViewState.IdRef="SaveToDisk_11" Overwrite="True" SavePath="c:\temp\teams_info.xml" SkipFirst="True">
                            <eas:SaveToDisk.VersionMask>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </eas:SaveToDisk.VersionMask>
                          </eas:SaveToDisk>
                        </If.Then>
                      </If>
                      <eaa:AssignVariables Document="[teamsDataDoc.Document]" sap2010:WorkflowViewState.IdRef="AssignVariables_4" Result="[teamsVars]">
                        <eaa:AssignVariables.Variables>
                          <scg:List x:TypeArguments="eaa:Variable" Capacity="4">
                            <eaa:XpathVariable DefaultValue="{x:Null}" DefaultXmlNamespace="{x:Null}" Expression="/DLSRoot/TemplateList/Attributes/Joined" Name="templateList" ReturnType="Document">
                              <eaa:XpathVariable.XmlNamespaces>
                                <sco1:ObservableCollection x:TypeArguments="eae1:XmlNamespace" />
                              </eaa:XpathVariable.XmlNamespaces>
                            </eaa:XpathVariable>
                            <eaa:XpathVariable DefaultValue="{x:Null}" DefaultXmlNamespace="{x:Null}" Expression="/DLSRoot/TemplateList/JsonData" Name="faultSnippet" ReturnType="Document">
                              <eaa:XpathVariable.XmlNamespaces>
                                <sco1:ObservableCollection x:TypeArguments="eae1:XmlNamespace" />
                              </eaa:XpathVariable.XmlNamespaces>
                            </eaa:XpathVariable>
                          </scg:List>
                        </eaa:AssignVariables.Variables>
                      </eaa:AssignVariables>
                    </Sequence>
                    <Sequence DisplayName="Teams WebHook Stuff" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[url]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[fBag("TeamsWebhookURL")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="Build Card Json" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_49">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[header]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["{""type"":""message"",""attachments"":[{""contentType"":""application/vnd.microsoft.card.adaptive"",""contentUrl"":null,""content"":{""$schema"":""http://adaptivecards.io/schemas/adaptive-card.json"",""type"":""AdaptiveCard"",""Image"":""https://datolitesolutions.com/wp-content/uploads/2024/05/Datolite-Template-Services-558x562.png"",""version"":""1.4"",""body"":[{""type"":""Container"",""items"":[{""type"":""ColumnSet"",""columns"":[{""type"":""Column"",""width"":""auto"",""items"":[{""type"":""Image"",""url"":""https://datolitesolutions.com/wp-content/uploads/2024/05/Datolite-Template-Services-558x562.png"",""size"":""Medium""}]},{""type"":""Column"",""width"":""stretch"",""items"":[{""type"":""TextBlock"",""text"":""3ET Fault Detected"",""weight"":""Bolder"",""size"":""Large""},{""type"":""TextBlock"",""text"":""One or more faults have been detected on your 3E Templates server. Please review the messages below."",""wrap"":""true""}]}]},"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_50">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[templateList]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["{""type"":""ColumnSet"",""columns"":[{""type"":""Column"",""width"":""auto"",""items"":[{""type"":""TextBlock"",""text"":""Faults Detected In: "",""weight"":""Bolder""}]},{""type"":""Column"",""width"":""stretch"",""items"":[{""type"":""TextBlock"",""text"":""" &amp; teamsVars("templateList").ToString &amp; """,""wrap"":""true""}]}]},"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_51">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[faultList]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[teamsVars("faultSnippet").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_53">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[saveloc]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["{""type"":""ColumnSet"",""columns"":[{""type"":""Column"",""width"":""auto"",""items"":[{""type"":""TextBlock"",""text"":""Fault Report: "",""weight"":""Bolder""}]},{""type"":""Column"",""width"":""stretch"",""items"":[{""type"":""TextBlock"",""text"":""**" &amp; saveResult.FilePath &amp; "**"",""wrap"":""true""},{""type"":""ActionSet"",""actions"":[{""type"":""Action.OpenUrl"",""title"":""Open URL"",""url"":""|||DatoliteURLPlaceholder|||""}]}]}]}"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[footer]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">]}]}}]}</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[payload]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[header &amp; templateList &amp; saveloc.Replace("\","\\") &amp; "," &amp; faultList &amp; footer]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <If Condition="[fBag(&quot;DebugMode&quot;) = &quot;true&quot;]" sap2010:WorkflowViewState.IdRef="If_8">
                        <If.Then>
                          <eas:SaveToDisk Document="[edg.Activities.Document.Create(new System.IO.MemoryStream(System.Text.Encoding.ASCII.GetBytes(payload)))]" sap2010:WorkflowViewState.IdRef="SaveToDisk_9" Overwrite="True" SavePath="c:\temp\fault_json_payload.json" SkipFirst="True">
                            <eas:SaveToDisk.VersionMask>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </eas:SaveToDisk.VersionMask>
                          </eas:SaveToDisk>
                        </If.Then>
                      </If>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                        <Assign.To>
                          <OutArgument x:TypeArguments="snh:HttpClient">[client]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="snh:HttpClient">[new HttpClient()]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
                        <Assign.To>
                          <OutArgument x:TypeArguments="snh:HttpContent">[content]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="snh:StringContent">[new StringContent(payload, System.Text.Encoding.UTF8,"application/json")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_48">
                        <Assign.To>
                          <OutArgument x:TypeArguments="stt:Task(snh:HttpResponseMessage)">[response]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="stt:Task(snh:HttpResponseMessage)">[client.PostAsync(url, content)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                </If.Then>
              </If>
              <eae:ExecuteSql ConnectionString="Data Source=.;Initial Catalog=ProcessManager;User Id=appender;Password=appender;TrustServerCertificate=True" DisplayName="Update Notify Table" sap2010:WorkflowViewState.IdRef="ExecuteSql_4" Query="insert into DLS_FaultCheck select WorkflowInstanceID, WorkflowHostType, StartTime,3 as Notifystatus,'matt.klem@datolitesolutions.com' as SendToEmail from WFInstances wfi left join DLS_FaultCheck dfc on wfi.WorkflowInstanceID = dfc.InstanceID where wfi.LastStatus = 3 and dfc.InstanceID is null" Result="[faultList]" />
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <eal:Log sap2010:WorkflowViewState.IdRef="Log_6" LogType="Information" Message="Fault check complete." />
    </Sequence>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetPropertyBagUrl_1" sap:VirtualizedContainerService.HintSize="277,150">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetBagFromStore_1" sap:VirtualizedContainerService.HintSize="277,274">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetBagFromStore_2" sap:VirtualizedContainerService.HintSize="277,274">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="1216,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteSql_1" sap:VirtualizedContainerService.HintSize="1194,155">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveToDisk_1" sap:VirtualizedContainerService.HintSize="250,167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="1194,315" />
      <sap2010:ViewStateData Id="AssignVariables_3" sap:VirtualizedContainerService.HintSize="1194,233">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BreakDocument_1" sap:VirtualizedContainerService.HintSize="1047,155">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="813,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="761,60" />
      <sap2010:ViewStateData Id="AssignVariables_2" sap:VirtualizedContainerService.HintSize="761,238">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="761,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="464,442">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="486,1266">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Log_5" sap:VirtualizedContainerService.HintSize="250,156">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="761,1414">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="761,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="783,2116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="813,2264">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="813,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="SaveToDisk_5" sap:VirtualizedContainerService.HintSize="251,167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="813,739">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="1047,3367">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ApplyStylesheet_5" sap:VirtualizedContainerService.HintSize="1025,157">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ApplyStylesheet_6" sap:VirtualizedContainerService.HintSize="1025,157">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ConvertExcelDocument_1" sap:VirtualizedContainerService.HintSize="1025,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveToDisk_8" sap:VirtualizedContainerService.HintSize="500,167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveToDisk_10" sap:VirtualizedContainerService.HintSize="500,167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="1025,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="1047,1143">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Email_1" sap:VirtualizedContainerService.HintSize="358,239">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Log_7" sap:VirtualizedContainerService.HintSize="328,156">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="1047,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ApplyStylesheet_7" sap:VirtualizedContainerService.HintSize="500,157">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveToDisk_11" sap:VirtualizedContainerService.HintSize="250,167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="500,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssignVariables_4" sap:VirtualizedContainerService.HintSize="500,233">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="522,909">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="242,97" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="264,721">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveToDisk_9" sap:VirtualizedContainerService.HintSize="500,167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="264,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="522,1336">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="544,2409">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="1047,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteSql_4" sap:VirtualizedContainerService.HintSize="1047,155">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="1069,5246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="1194,5394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="1216,6341">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Log_6" sap:VirtualizedContainerService.HintSize="1216,156">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="1238,6752">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="1260,6876">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SolutionManagerEmptyTemplate_1" sap:VirtualizedContainerService.HintSize="1300,6956" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>